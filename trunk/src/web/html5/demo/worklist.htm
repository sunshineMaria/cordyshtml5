<!DOCTYPE html>
<html>
	<head>
	<title>Worklist</title>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>
	<link rel="stylesheet" href="/cordys/html5/jquery/jquery.mobile-1.2.0.min.css" />
	<script src="/cordys/html5/jquery/jquery-1.8.2.min.js"></script>
	<script src="/cordys/html5/jquery/jquery.mobile-1.2.0.min.js"></script>

	<script src="/cordys/html5/knockout/knockout-2.1.0.js" type="text/javascript"></script>
	<script src="/cordys/html5/cordys.html5sdk-0.5.js" type="text/javascript"></script>

	<script type="text/javascript">
		var userData, userModel, targetModel, taskModel;
		$(function() {
			var re_longDT = new RegExp("^(\\d{4})\-(\\d{2})\-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})[.]?(\\d{0,9})(\\d*)?([Z+\-].*)?$");
			function getDateFromXML(XMLValue)
			{
				// Parse the xmlvalue and create a date object with the right values
				var found = XMLValue.search(re_longDT);
				var dObject;
				if (found >= 0)
				{
					dObject = new Date(RegExp.$2+"/"+RegExp.$3+"/"+RegExp.$1+" "+RegExp.$4+":"+RegExp.$5+":"+RegExp.$6+" +000")
				}
				return dObject;
			}
			ko.bindingHandlers.date = {
				update: function(element, valueAccessor) {
					ko.utils.unwrapObservable(valueAccessor()); //just to create a dependency
					var dt = getDateFromXML(valueAccessor());
					if (dt) $(element).text(dt.toDateString() + " " + dt.toLocaleTimeString());
				}
			};
			userModel = $.cordys.ajax({
				method: "GetUserDetails",
				namespace: "http://schemas.cordys.com/notification/workflow/1.0",
				dataType: 'json',	// the xml result will be converted into js objects
				success: function(data) {
					userData = data;
					console.log(userData);
				},
				async: false
			});
			targetModel = new $.cordys.model({
				objectName: "Target",
				context: document.getElementById("worklistPage"),
				defaults: {
					namespace: "http://schemas.cordys.com/notification/workflow/1.0",
					dataType: "json",
					organization: userData.User.UserDN.replace(/.*?,(?=o=)/,"")
				},
				create: {},
				read: {
					method: "GetAllTargets",
					parameters: [
						{name: "TaskCountRequired", value: "true"}
					]
				}
			});
			taskModel = new $.cordys.model({
				objectName: "Task",
				defaults: {
					namespace: "http://schemas.cordys.com/notification/workflow/1.0",
					dataType: "json"
				},
				create: {},
				read: {
					method: "GetTasks",
					iteratorSize: 50
				}
			});

			targetModel.read();
		});
		function selectWorklist() {
			return function(data) {
				if (targetModel.selectedItem) targetModel.selectedItem(data);
			}
		}
		function selectTask() {
			return function(data) {
				if (taskModel.selectedItem) taskModel.selectedItem(data);
			}
		}
		function getWorkHeader(item) {
			if (item.DisplayName) return item.DisplayName;
			return item.Id.substring(3).replace(/,.*/, "");
		}
	</script>

</head>

<body>

	<div data-role="page" id="worklistPage">
		<div data-role="header" data-theme="b">
			<h1>Worklists</h1>
		</div>

		<div data-role="content" data-theme="b">
			<div data-role="controlgroup" data-type="horizontal">
				<a href="#mainPage" data-role="button" data-transition="fade" data-theme="c">Personal Tasks</a>
				<a href="worklist.htm" data-role="button" data-transition="fade" data-theme="c" class="ui-btn-active">Worklists</a>
			</div>

			<ul id="workList" data-role="listview" data-theme="c" data-inset="true" data-bind="foreach:Target">
				<li>
					<div >
						<a href="#tasksPage" data-transition="pop" class="ui-link-inherit" data-bind="click:selectWorklist($data)">
							<h3 class="ui-li-heading">
								<span data-bind="text:getWorkHeader($data)"></span>
							<!-- ko if:TaskStates -->
								<span>(</span><span data-bind="text:TaskStates.State.Count"></span><span>)</span>
							<!-- /ko -->
							</h3>
						</a>
					</div>
				</li>
			</ul>
		</div>
	</div>
	<div data-role="page" id="tasksPage">
		<div data-role="header" data-theme="b">
			<a href="#mainPage" data-role="button" data-icon="back" data-rel="back">Worklist</a>
			<h1>Tasklist</h1>
		</div>

		<div data-role="content" data-theme="b">
			<ul id="Ul1" data-role="listview" data-theme="c" data-inset="true" data-bind="foreach:Task">
				<li>
					<div >
						<a href="#detailsPage" data-transition="pop" class="ui-link-inherit" data-bind="click:selectTask($data)">
							<h3 class="ui-li-heading" data-bind="text:Activity.text">{{:Activity}}</h3>
							<p class="ui-li-desc"><span data-bind="text:StartDate"></span>&nbsp;<span data-bind="text:State"></p>
						</a>
					</div>
				</li>
			</ul>
		</div>
	</div>

<script type="text/javascript">
	$("#worklistPage")
		.bind( 'pageshow',function(event, ui) {
			if (targetModel) targetModel.read();
		});
	$("#tasksPage")
		.bind( 'pageinit',function(event, ui) {
			ko.applyBindings(taskModel, document.getElementById("tasksPage"));
		})
		.bind( 'pageshow',function(event, ui) {
			if (taskModel) taskModel.read({
				parameters: {
					Target: {'@type':'role', 'text':targetModel.selectedItem().Id}
				}
			});
		});
</script>

</body>
</html>
