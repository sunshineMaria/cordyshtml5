<!DOCTYPE html> 
<html> 
	<head> 
	<title>Tasklist</title> 
	<meta name="viewport" content="width=device-width, initial-scale=1"/> 
	<link rel="stylesheet" href="http://code.jquery.com/mobile/1.1.0/jquery.mobile-1.1.0.min.css" />
	<script src="http://code.jquery.com/jquery-1.7.1.min.js" type="text/javascript"></script>
	<script src="http://code.jquery.com/mobile/1.1.0/jquery.mobile-1.1.0.min.js" type="text/javascript"></script>
	
	<script src="/cordys/html5/knockout/knockout-2.0.0.js" type="text/javascript"></script>	
	<script src="/cordys/html5/cordys.mobile.js" type="text/javascript"></script>

	<script type="text/javascript">
		var taskModel;
		$(function() {
			taskModel = new $.cordys.model({
				objectName: "Task",
				defaults: {
					namespace: "http://schemas.cordys.com/notification/workflow/1.0",
					dataType: "json"
				},
				create: {},
				read: {
					method: "GetTasks",
					parameters: [
						{name:"OrderBy",value:"Task.StartDate DESC"}
					]
				}
			});
			ko.bindingHandlers.date = { 
				update: function(element, valueAccessor) { 
					ko.utils.unwrapObservable(valueAccessor()); //just to create a dependency
					var dt = getDateFromXML(valueAccessor());
					if (dt) $(element).text(dt.toDateString() + " " + dt.toLocaleTimeString()); 
				}
			};
			ko.applyBindings(taskModel);
			taskModel.read();
		});
		var re_longDT = new RegExp("^(\\d{4})\-(\\d{2})\-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})[.]?(\\d{0,9})(\\d*)?([Z+\-].*)?$");
		function getDateFromXML(XMLValue)
		{
			// Parse the xmlvalue and create a date object with the right values
			var found = XMLValue.search(re_longDT);
			var dObject;
			if (found >= 0)
			{
				dObject = new Date(RegExp.$2+"/"+RegExp.$3+"/"+RegExp.$1+" "+RegExp.$4+":"+RegExp.$5+":"+RegExp.$6+" +000")
			}
			return dObject;
		}
		function selectTask() {
			return function(data) {
				if (taskModel.selectedItem) taskModel.selectedItem(data);

				var taskDetails = $.cordys.ajax({
						method: "GetTask",
						namespace: "http://schemas.cordys.com/notification/workflow/1.0",
						dataType: 'json',
						parameters: [
							{name:"TaskId",value:taskModel.selectedItem().TaskId},
							{name:"ReturnTaskData",value:"true"},
							{name:"RetrievePossibleActions",value:"true"}
						],
						success: function(data) {
							var url = data.tuple.old.Task.url;
							if (url.search(/\.htm$/) > 0) {
								url = addURLParameter(url, "taskId", data.tuple.old.Task.TaskId);
								$.mobile.changePage( url, { transition: "pop", changeHash: false } );
							}
							else {
								$.mobile.changePage( "#detailsPage", { transition: "pop", changeHash: false } );
							}
						}
					});
			}
		}
	</script>

</head> 

<body> 

	<div data-role="page" id="mainPage">
		<div data-role="header" data-theme="b">
			<a href="http://www.cordys.com" data-icon="back">Cordys</a>
			<h1>Tasklist</h1>
			<a href="#" data-icon="refresh"data-role="button" onclick="taskModel.read()">Refresh</a>
		</div>

		<div data-role="content" data-theme="b">
			<div data-role="controlgroup" data-type="horizontal" data-theme="c">
				<a href="tasklist.htm" data-role="button" data-transition="fade" data-theme="c" class="ui-btn-active">Personal Tasks</a>
				<a href="worklist.htm" data-role="button" data-transition="fade" data-theme="c">Worklists</a>
			</div>

			<ul id="workList" data-role="listview" data-theme="c" data-inset="true" data-bind="foreach:Task">
				<li>
					<div >
						<a href="#" data-transition="pop" class="ui-link-inherit" data-bind="click:selectTask($data)">
							<h3 class="ui-li-heading" data-bind="text:Activity">Activity</h3>
							<p class="ui-li-desc"><span data-bind="date:StartDate"></span>&nbsp;<span data-bind="text:State"></p>
						</a>
					</div>
				</li>
			</ul>
		</div>
	</div>

	<div data-role="page" id="detailsPage">
		<div data-role="header" data-theme="b">
			<a href="#mainPage" data-role="button" data-icon="back" data-rel="back">Tasklist</a>
			<h1>Task</h1>
		</div>
		<div data-role="content" data-theme="b">
			<ul data-role="listview" data-inset="true" id="detailView">
				<li data-role="heading" data-theme="c" data-mini="true">
					<div data-bind="with: selectedItem">
						<a class="ui-link-inherit">
							<h3 class="ui-li-heading"><span data-bind="text:Activity"></span></h3>
						</a>
					</div>
				</li>
				<li data-role="fieldcontain" data-mini="true">
					<div data-bind="with: selectedItem">
						<div >
							<label for="fldProcess" class="ui-input-text">Process</label>
							<input type="text" readonly='true' id="fldProcess" data-bind="value:ProcessName" class="ui-input-text ui-body-b ui-corner-all ui-shadow-inset"/>
						</div>
						<div >
							<label for="fldState" class="ui-input-text">State</label>
							<input type="text" readonly='true' id="fldState" data-bind="value:State" class="ui-input-text ui-body-b ui-corner-all ui-shadow-inset"/>
						</div>
						<div >
							<label for="fldAssignee" class="ui-input-text">Assignee</label>
							<input type="text" readonly='true' id="fldAssignee" data-bind="value:Assignee" class="ui-input-text ui-body-b ui-corner-all ui-shadow-inset"/>
						</div>
						<div >
							<label for="fldStartDate" class="ui-input-text">Start Date</label>
							<input type="text" readonly='true' id="fldStartDate" data-bind="value:StartDate" class="ui-input-text ui-body-b ui-corner-all ui-shadow-inset"/>
						</div>
					</div>
				</li>
				<li>
					<div data-role="controlgroup" data-type="horizontal" data-theme="d">
						<a data-role="button" data-theme="c">Start</a>
						<a data-role="button" data-theme="c">Stop</a>
						<a data-role="button" data-theme="c">Pause</a>
						<a data-role="button" data-theme="c">Complete</a>
						<a data-role="button" data-theme="c">Skip</a>
					</div>
				</li>
			</ul>
		</div>
	</div>
<script type="text/javascript">
	$("#mainPage").bind( 'pageshow',function(event, ui) {
		if (taskModel) taskModel.read();
	});
	$("#detailsPage").bind( 'pageshow',function(event, ui) {
	//	taskModel.read({method: "GetTask", parameters: [{name:"TaskId",value:taskModel.selectedItem().TaskId()}]});
		var taskDetails = $.cordys.ajax({
				method: "GetTask",
				namespace: "http://schemas.cordys.com/notification/workflow/1.0",
				dataType: 'json',
				parameters: [
					{name:"TaskId",value:taskModel.selectedItem().TaskId},
					{name:"ReturnTaskData",value:"true"},
					{name:"RetrievePossibleActions",value:"true"}
				],
				success: function(data) {
				//	debugger;
				//	alert("task: " + JSON.stringify(data.tuple.old.Task.TaskData));
				}
			});
	});
</script>

</body>
</html>
