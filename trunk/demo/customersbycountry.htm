<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<title>Customers By Region</title> 
		<meta name="viewport" content="width=device-width, initial-scale=1"/> 
        
		<link rel="stylesheet" href="/cordys/html5/jquery/jquery.mobile-1.1.0.min.css" />
		<script src="/cordys/html5/jquery/jquery-1.7.1.min.js" type="text/javascript"></script>
		<script src="/cordys/html5/jquery/jquery.mobile-1.1.0.min.js" type="text/javascript"></script>

		<script type="text/javascript" src="/cordys/html5/fusion/Charts/FusionCharts.js"></script>
		<script type="text/javascript" src="/cordys/html5/fusion/Charts/FusionCharts.jqueryplugin.js"></script>

		<script src="/cordys/html5/knockout/knockout-2.1.0.js" type="text/javascript"></script>
		<script src="/cordys/html5/cordys.html5sdk-0.1.js" type="text/javascript"></script>

<script type="text/javascript">
	$(function() {
		// Create a new model
		customerModel = new $.cordys.model({
			
			objectName: "Customers", // Name of the Business Object
			isReadOnly:false,
			read: {
				// Settings for the read method
				async:false,
				namespace: "http://schemas.cordys.com/NW",
				dataType: "json",
				method: "GetCustomersObjects",
				// Parameters for the method
				parameters: {
					fromCustomerID: "aaaaaaaa",
					toCustomerID: "ZZZZZZZZ"
				}
			}
		});

		// Invoke Knockout to bind to our Model
		ko.applyBindings(customerModel);

		// Call the read method. This would fire the method with the namespace and parameters as specified in the read settings above.
		customerModel.read();

		var customersByCountry = {};
		var customers = customerModel.Customers();

		// Create a collection of the customers by country
		for (var customerKey in customers)
		{
			var customer = customers[customerKey];
			var country = customer.Country();
			if (! customersByCountry[country]){
				customersByCountry[country] = [customer];
			}
			else{
				customersByCountry[country].push(customer);
			}
		}

		// Create the dataArray required for Fusion Chart
		var dataArray = [];
		for (var country in customersByCountry)
		{
			dataArray.push({'label':country, 'value':customersByCountry[country].length, link:"j-setCurrentCountry-" + country});
		}

		// Create complete chart data with schema required for Fusion Chart
		var chartData = { 
			"chart": { 
					"captions" : "Customers By Country" ,
					"numberPrefix" : ""
			},
        
			"data" : dataArray
		}

		// Create the Chart
		$("#chartContainer").insertFusionCharts({type: "Pie2D", dataSource: chartData, dataFormat: "json", width: "100%", height: "400px", id: "myChartID", renderer:'javascript'});
	});

	// Create an Observable for the selected country so that KO would re-render when a different country is selected
	var selectedCountry = ko.observable();
	// Called on clicking a Country in the Chart. Sets the current country
	function setCurrentCountry(value){
		selectedCountry(value);
		return true;
	}
</script> 
	</head>
    <body>
        <div data-role="page" id="mainPage">
            <!-- header -->
            <div data-role="header" data-theme="b">
				<h1>Customers By Country</h1>
			</div>
            <!-- content area -->
			<div data-role="content" data-theme="b">
				<div id="chartContainer" style="height:40%"></div>
				<ul id="customersList" data-role="listview" data-theme="c" data-inset="true" data-bind="foreach:Customers">
					<!-- ko if: selectedCountry() !=="undefined" && selectedCountry() === Country()-->
						<li>
							<h3 class="ui-li-heading" data-bind="text:CompanyName"></h3>
							<p class="ui-li-desc"><span data-bind="text:City"></span>&nbsp;<span data-bind="text:Country"></span></p>
							<p class="ui-li-desc" data-bind="text:Phone"></p>
							<p class="ui-li-desc" data-bind="text:Fax"></p>
							<p class="ui-li-desc" data-bind="text:ContactName"></p>
						</li>
					<!-- /ko -->
				</ul>            
			</div>
        </div>
    </body>
</html>
